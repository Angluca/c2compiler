module array_test;

import stdio as io;

#define TEST(x,y) \
Elements += { #x, y, test_##x } \
func i32 test_##x()

type TestFunc func i32 ();

type Element struct {
    const char[16] name;
    i32 value;
    TestFunc function;
}


func i32 generic() {
    return 0;
}

const Element[+] Elements;
Elements += { "test1", 10, generic }
Elements += { "test2", 20, generic }
Elements += { "test3", 30, generic }

TEST(foo, 100) {
    io.printf("here!\n");
    return 0;
}
TEST(bar, 200) {
    io.printf("here!\n");
    return 0;
}


Element[] elems = {
    { "t1", 1, nil },
    { "t2", 2, nil },
}

const i32 Const_a = 10;
i32 a = 20;
func i32 myfunc(i32 val) { return 2 * val; }
i32[Const_a] buf1;   // ok

public func i32 main() {
    for (i32 i=0; i<elemsof(elems); i++) {
        io.printf("[%2d] %16s\n", i, elems[i].name);
    }
    Element e;
    e.name;
    Element* pe;
    pe.name;
    return 0;
}

