module puzzle;

const u32 LIST_SIZE = 100;
i32[LIST_SIZE] activeList;
i32 readIndex = 0;
i32 writeIndex = 0;

func u32 listSize() {
    if (readIndex == writeIndex) return 0;
    if (writeIndex > readIndex) {
        return cast<u32>(writeIndex - readIndex);
    }
    return cast<u32>(LIST_SIZE + writeIndex - readIndex);
}

func i32 listGet() {
    i32 v = activeList[readIndex];
    readIndex++;
    if (readIndex == LIST_SIZE) readIndex = 0;
    return v;
}

func void listAdd(i32 v) {
    activeList[writeIndex] = v;
    writeIndex++;
    if (writeIndex == LIST_SIZE) writeIndex = 0;
}

func void listClear() {
    readIndex = 0;
    writeIndex = 0;
}

