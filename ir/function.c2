/* Copyright 2022-2025 Bas van den Berg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module ir;

public type Function struct {
    u32 external : 1;
    // TODO linkage
    GlobalId gid;
    Index blocks;
    Index args;
}

static_assert(24, sizeof(Function));

fn void Function.init(Function* f, GlobalId gid, bool external) {
    f.blocks.start = 0;
    f.gid = gid;
    f.external = external;
}

fn void Function.setBlocks(Function* f, u32 start, u32 count) {
    f.blocks.start = start;
    f.blocks.count = count;
}

fn Index Function.getBlocks(const Function* f) {
    return f.blocks;
}

fn void Function.setArgs(Function* f, u32 start, u32 count) {
    f.args.start = start;
    f.args.count = count;
}

/*
fn Index Function.getArgs(const Function* f) {
    return f.args;
}
*/

fn u32 Function.getGid(const Function* f) {
    return f.gid;
}

fn bool Function.isExternal(const Function* f) {
    return f.external;
}

