// @warnings{no-unused}
module test;

type Foo enum i8 {
    A,
    B,
    C,
    D,
    E,
}
Foo f = Foo.A;

func void test1() {
    switch (f) {    // @error{4 enumeration values not handled in switch: B, C, D...}
    case Foo.A:
    }
}

func void test2() {
    switch (f) { // @error{enumeration values B, D, and E not handled in switch}
    case Foo.A:
    case Foo.C:
    }
}

func void test3() {
    switch (f) { // @error{enumeration values B and E not handled in switch}
    case Foo.A:
    case Foo.C:
    case Foo.D:
    }
}

func void test4() {
    switch (f) { // @error{enumeration value E not handled in switch}
    case Foo.A:
    case Foo.B:
    case Foo.C:
    case Foo.D:
    }
}

func void test5() {
    switch (f) {
    case Foo.A:
    case Foo.B:
    case Foo.C:
    case Foo.D:
    case Foo.E:
    default:    // @warning{default label in switch which covers all enumeration values}
    }

    switch (f) {
    default:
    }
}

